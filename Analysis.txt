Analysis of the running time between the two data structures: Trie and Binary Search Tree
Between the two different data structures, the trie data structure is faster. The trie data structure is originally intended for tasks such as the spell checker. With Trie, we can insert and find strings in O(L) time where L represents the length of a single word. This is obviously faster than BST. Trie also avoids more time because it gets directly through the path (childs) needed. Searching in the binary search tree has a worst case complexity of O(n). In general, time complexity is O(h) where h is height of BST. In this case BST has a larger height than trie, which means it is slower. 

